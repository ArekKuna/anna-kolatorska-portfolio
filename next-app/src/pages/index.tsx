import { sdk } from "graphql/client";
import { GetStaticProps } from "next";
import Head from "next/head";
import { HomePageSlider } from "components/HomePageSlider/HomePageSlider";
import { UploadFileEntity } from "graphql/generated";
import { getPlaiceholder } from "plaiceholder";
import { AboutMe } from "components/AboutMe/AboutMe";
import { AboutMeSectionData, FormattedImageData } from "pages/types/types";

type Props = {
  formattedLayoutSliderImagesData: FormattedImageData[];
  aboutMeSectionData: AboutMeSectionData;
};

const HomePage = ({
  formattedLayoutSliderImagesData,
  aboutMeSectionData,
}: Props) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomePageSlider data={formattedLayoutSliderImagesData} />
      <AboutMe data={aboutMeSectionData} />
    </>
  );
};

const getStaticImage = async (image: UploadFileEntity) => {
  const url = image.attributes?.url;
  const alt = image.attributes?.alternativeText;

  const buffer = await fetch(
    `${process.env.NEXT_PUBLIC_STRAPI_API_URL}${url}`
  ).then(async (res) => Buffer.from(await res.arrayBuffer()));

  const { base64 } = await getPlaiceholder(buffer);

  return {
    url,
    alt,
    base64,
  };
};

export const getStaticProps: GetStaticProps = async () => {
  const { layoutSlider } = await sdk.GetLayoutSlider({
    slug: "1",
  });

  const { aboutMe } = await sdk.GetAbouMeSection({
    slug: "1",
  });
  console.log(aboutMe);
  const layoutSliderImagesData =
    layoutSlider?.data?.attributes?.layoutSlider?.imagesArray?.data;

  const aboutMeSectionData = aboutMe?.data?.attributes?.aboutMe;

  const aboutMeSectionImage = aboutMeSectionData?.image?.data;

  if (!layoutSliderImagesData || !aboutMeSectionData || !aboutMeSectionImage)
    return { notFound: true };

  const formattedLayoutSliderImagesData = await Promise.all(
    layoutSliderImagesData.map(getStaticImage)
  );

  const formattedAboutMrSectionImage = await getStaticImage(
    aboutMeSectionImage
  );

  return {
    props: {
      formattedLayoutSliderImagesData,
      aboutMeSectionData: {
        title: aboutMeSectionData.title,
        description: aboutMeSectionData.description,
        image: formattedAboutMrSectionImage,
      },
    },
  };
};

export default HomePage;
